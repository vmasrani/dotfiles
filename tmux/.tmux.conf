# vim:ft=conf:

# Primer: https://danielmiessler.com/study/tmux/
# Tmux for mere mortals: https://zserge.com/posts/tmux/
# gitmux: https://github.com/arl/gitmux



# Create new panes and windows with current path
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind-key -n "M-'" split-window -h -c "#{pane_current_path}"
bind-key -n M-/ split-window -v -c "#{pane_current_path}"
bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-N new-session -c "#{pane_current_path}"

# Sidepanel toggle (VSCode-style)
set -g @sidepanel-pane-id ""  # Store the sidepanel pane ID in a user option
set -g @sidepanel-session ""  # Store the sidepanel session name in a user option

# Toggle sidepanel with L (prefix+L)
bind-key L if-shell -F '#{==:#{session_name},sidepanel}' {
    detach-client  # If we're already in the sidepanel session, detach
} {
    if-shell -F '#{session_exists:sidepanel}' {
        attach-session -t sidepanel  # If sidepanel session exists, attach to it
    } {
        display-popup -E -h 95% -w 95% -x C -y C "tmux new-session -A -s sidepanel"  # Otherwise create new one
    }
}

# Layout and process management
bind-key / next-layout  # Toggle layout
bind-key H display-popup -E -h 95% -w 95% -x C -y C 'htop -t'  # Quick view of processes
bind-key g display-popup -E -h 95% -w 60% -x C -y C 'watch -n 1 nvidia-smi'  # GPU monitoring

# Help and session management
bind-key ? split-window -h 'exec tmux list-keys | fzf-tmux -p80%,80%'  # Help screen
bind-key S command-prompt -p "New session name:" "new-session -s '%%'"  # New session prompt

# Terminal and history settings
set -g default-terminal "tmux-256color"  # Set default terminal
set -g history-limit 100000  # Increase history limit
set -g base-index 1  # Start numbering windows from 1
set-option -g renumber-windows on  # Renumber windows
set -s escape-time 50  # Faster escape sequences

# Popup management
bind -n M-A display-popup -E -h 95% -w 95% -x 5% show-tmux-popup.sh popup1
bind -T popup M-A detach
bind -n M-S display-popup -E -h 95% -w 95% -x 5% show-tmux-popup.sh popup2
bind -T popup M-S detach
bind -T popup C-o copy-mode  # Support detaching from nested session

# Mouse and clipboard settings
set -g mouse on  # Enable mouse mode
set -g allow-passthrough  # Allow passthrough

# Copy mode settings
bind -T copy-mode-vi v send -X begin-selection
bind P paste-buffer

# Platform-specific clipboard integration
if-shell "uname | grep -q Darwin" {
    # macOS clipboard integration
    bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
    bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
} {
    # Linux clipboard integration
    bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
    bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
}

# Status and title settings
set-option -g status-position top
set-option -g status-keys vi
set-option -g set-titles on
set-option -g set-titles-string 'tmux - #W'
set -g bell-action any
set-option -g visual-bell off
setw -g mode-keys vi
setw -g monitor-activity on
set -g visual-activity on
set -g status-interval 2

# Environment settings
setenv -g SHOW_DIRECTORY_NAME 1
set-environment -gu GEM_EDITOR  # Disable possibly set visual editor

# Load local config
if-shell "test -f $HOME/.tmux.conf.local "source $HOME/.tmux.conf.local

# Plugin settings
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'kristijan/tmux-fzf-pane-switch'

# (Duplicate keybindings removed - already defined above)

# Vim-like key bindings for pane navigation
unbind-key h
bind-key h select-pane -L
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key l
bind-key l select-pane -R

# Resizing panes
unbind-key Left
bind-key -r Left resize-pane -L 5
unbind-key Right
bind-key -r Right resize-pane -R 5
unbind-key Down
bind-key -r Down resize-pane -D 5
unbind-key Up
bind-key -r Up resize-pane -U 5

# Window management
bind-key ^space last-window  # Fast toggle between current and last-used window
bind-key p select-layout -o  # Quick way to get back to the previous-used layout
bind-key -r '<' swap-window -d -t '{previous}'  # Move window left
bind-key -r '>' swap-window -d -t '{next}'  # Move window right

# ===================================================================
# Key Table Variables (for F12 toggle functionality)
# ===================================================================
color_status_text="colour245"
color_window_off_status_bg="colour238"
color_light="white"
color_dark="colour232"
color_window_off_status_current_bg="colour254"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"

bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

wg_is_keys_off="#{?#{==:#(tmux show-option -qv key-table),off},#[reverse]OFF,}"


set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"

# Remote and Local Configuration
# Detect if we're running remotely via SSH
if-shell '[ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]' {
    # Remote configuration (Ubuntu with GPU)
    set -g @plugin 'dracula/tmux'

    # Check if nvidia-smi is available for GPU metrics
    if-shell "command -v nvidia-smi" {
        set -g @dracula-plugins "cpu-usage ram-usage gpu-usage gpu-ram-usage ssh-session network-bandwidth network"
    } {
        # Fallback for remote systems without GPU
        set -g @dracula-plugins "cpu-usage ram-usage ssh-session network-bandwidth network"
    }

    set -g @dracula-show-left-icon "Û∞Ñõ"
} {
    # Local configuration (MacBook)
    set -g @plugin 'dracula/tmux'
    set -g @dracula-plugins "cpu-usage ram-usage time network battery"
    set -g @dracula-show-left-icon "\uf179"
}

# Common Dracula Settings
set -g @dracula-show-powerline true
set -g @dracula-synchronize-indicator "sync"
set -g @dracula-network-bandwidth-interval 1
set -g @dracula-network-bandwidth-show-interface false
set -g @dracula-battery-style "percentage"
set -g @dracula-show-battery-percentage true
set -g @dracula-cpu-display-load true
set -g @dracula-show-cpu-usage true
set -g @dracula-show-ram-usage true
set -g @dracula-ram-usage true

# Color Settings


set -g @dracula-colors "
# Modern Elegant Palette
soft_blue='#4F8CC9'
muted_teal='#3AAFA9'
deep_purple='#6C3483'
slate='#2D3A4A'
charcoal='#23272E'
light_blue='#B3C7F7'
light_gray='#E5E9F0'
dark_blue='#223A5E'
olive='#7D8F69'
soft_orange='#FFB26B'
forest_green='#2E8B57'
warm_gold='#FFD580'
dark_gray='#22223B'
white='#FFFFFF'
"

set -g @dracula-cpu-usage-colors "soft_blue white"
set -g @dracula-ram-usage-colors "muted_teal white"
set -g @dracula-gpu-usage-colors "deep_purple white"
set -g @dracula-gpu-ram-usage-colors "slate white"
set -g @dracula-network-colors "charcoal light_blue"
set -g @dracula-network-bandwidth-colors "light_gray dark_blue"
set -g @dracula-ssh-session-colors "olive white"
set -g @dracula-synchronize-colors "soft_orange white"
set -g @dracula-battery-colors "forest_green white"
set -g @dracula-time-colors "warm_gold dark_gray"



# Icon and Label Settings
set -g @dracula-synchronize-label "Û∞ì¶"
set -g @dracula-network-ethernet-label "Û∞àÄ Eth"
set -g @dracula-network-offline-label "Û±ç¢ "
set -g @dracula-network-wifi-label "Ôêº "
set -g @dracula-network-bandwidth-label "üåê"
set -g @dracula-battery-label "üîã"
set -g @dracula-cpu-usage-label "üéõ "
set -g @dracula-ram-usage-label "ñ£ò "
set -g @dracula-gpu-power-label "Û∞¢Æ"
set -g @dracula-gpu-usage-label "üöÄ"
set -g @dracula-gpu-vram-label "üéÆ"

# Miscellaneous Settings
set -g @dracula-show-left-sep ""
set -g @dracula-show-right-sep ""
set -g @dracula-show-flags false
set -g @dracula-refresh-rate 2
set -g @dracula-border-contrast true

# Thumbs Plugin Settings
set -g @thumbs-command 'echo -n {} | copy'
set -g @thumbs-reverse enabled
set -g @thumbs-unique enabled

# Plugin and Continuum Settings
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g default-command "exec $(which zsh) -l"

# Status and Rename Settings
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# source this file after changes
bind R source-file ~/.tmux.conf \; display "Reloaded .tmux.conf file"

# Auto-install TPM and plugins on first run
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'

# Alternative icons if you prefer:
# CPU: Û∞òö   RAM:   GPU: Û∞æ≤   Weather:   Time:   Power: 

