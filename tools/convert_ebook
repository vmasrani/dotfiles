#!/usr/bin/env -S uv run --script
# /// script
# requires-python = ">=3.14"
# dependencies = [
#     "convertio",
# ]
# ///

import sys
from pathlib import Path
import time
from convertio import Client


def convert_to_pdf(api, source):
    output_file = source.with_suffix('.pdf')
    print("Converting to pdf...")
    conversion_id = api.convert_by_filename(str(source), 'pdf')
    while api.check_conversion(conversion_id).step != 'finish':
        time.sleep(1)
    api.download(conversion_id, str(output_file))
    print("Conversion to pdf successful.")
    return output_file

def main():
    if len(sys.argv) != 2:
        print(f"Usage: {sys.argv[0]} <input_file>")
        sys.exit(1)

    input_file = Path(sys.argv[1]).expanduser().resolve()
    if not input_file.exists():
        print(f"Error: The file '{input_file}' does not exist.")
        sys.exit(1)

    suffix = input_file.suffix.lower()
    if suffix == '.pdf':
        print("Already a PDF. Nothing to do.")
        return

    if suffix not in {'.epub', '.mobi'}:
        print(f"Error: Unsupported input format '{suffix}'. Only .epub, .mobi, or .pdf are supported.")
        sys.exit(1)

    with open(Path.home() / '.convertio_api_key') as f:
        api_key = f.read().strip()

    api = Client(api_key)

    pdf_file = convert_to_pdf(api, input_file)
    if not pdf_file.exists():
        print(f"Error: The PDF file '{pdf_file}' was not created.")
        sys.exit(1)

    print(f"Created '{pdf_file}' next to the original.")

if __name__ == "__main__":
    main()
